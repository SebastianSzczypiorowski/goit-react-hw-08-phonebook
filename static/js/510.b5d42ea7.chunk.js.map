{"version":3,"file":"static/js/510.b5d42ea7.chunk.js","mappings":"kNAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEhBC,EAAY,SAAAP,GAAK,OAAIA,EAAMQ,OAAV,E,UCL9B,EAAmC,sCAAnC,EAAuF,iC,SCmEvF,MA/DA,WAEE,IAAMC,GAAWC,EAAAA,EAAAA,MACXT,GAAWU,EAAAA,EAAAA,IAAYZ,GAiC7B,OACE,gBAAKa,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAiBC,SAlCjB,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOJ,EAAMG,OAAOE,SAASD,KAAKE,MAClCC,EAASP,EAAMG,OAAOE,SAASE,OAAOD,MACxCpB,EAASsB,MAAK,SAAAC,GAAO,OAAIA,EAAQL,OAASA,CAArB,IACvBM,MAAM,GAAD,OAAIN,EAAJ,yCAEKA,GAASG,GAKrBb,GAASiB,EAAAA,EAAAA,IAAW,CAAEP,KAAMA,EAAMG,OAAQA,KAC1CL,EAAKU,SALHF,MAAM,4BAMT,EAmBG,WACE,kBAAOG,QAAQ,OAAf,mBACA,kBACEC,GAAG,OACHC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOL,QAAQ,SAAf,qBACA,kBACEC,GAAG,SACHC,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQH,KAAK,SAAb,6BAIP,E,UCjED,EAA8B,iCAA9B,EAAwE,4BAAxE,EAA2G,0BAA3G,EAAkJ,gCC0DlJ,MArDA,WACE,IAAM7B,GAAWU,EAAAA,EAAAA,IAAYZ,GACvBS,GAAUG,EAAAA,EAAAA,IAAYJ,GACtBE,GAAWC,EAAAA,EAAAA,MAMXwB,EAAmBjC,EAASkC,QAAO,SAAAX,GAAO,OAC9CA,EAAQL,KAAKiB,cAAcC,SAAS7B,EAAQ4B,cADE,IAOhD,OACE,iBAAKxB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAOe,QAAQ,eAAf,oCACA,kBACEC,GAAG,eACHC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,SACNM,SAdmB,SAAAC,GACzBA,EAAEvB,iBACFP,GAAS+B,EAAAA,EAAAA,GAAWD,EAAErB,OAAOG,OAC9B,QAcG,wBACGa,EAAiBO,KAAI,SAAAjB,GACpB,OACE,gBAAqBZ,UAAWC,EAAhC,UAEGW,EAAQL,KAFX,IAEkBK,EAAQF,QACxB,mBACEV,UAAWC,EACXiB,KAAK,SACLX,KAAMK,EAAQL,KACduB,QAAS,WAlCF,IAAAb,IAmCQL,EAAQK,GAlCnCpB,GAASkC,EAAAA,EAAAA,IAAcd,GAmCV,EANH,iBAHOL,EAAQK,GAepB,QAIR,ECxDD,EAAqC,sCC2BrC,MAnBA,WACE,IAAMpB,GAAWC,EAAAA,EAAAA,MACXN,GAAYO,EAAAA,EAAAA,IAAYR,GACxBG,GAAQK,EAAAA,EAAAA,IAAYN,GAM1B,OAJAuC,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,KAGF,iBAAKG,UAAWC,EAAhB,WACE,SAAC,EAAD,IAECT,IAAcE,IAAS,mDACxB,SAAC,EAAD,MAGL,C","sources":["components/redux/phonebook/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/Pages/PhoneBook/Phonebook.module.css?bc03","Pages/PhoneBook/Phonebook.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filters;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactContainer\":\"ContactForm_contactContainer__0SoDv\",\"contactForm\":\"ContactForm_contactForm__y0Rca\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/redux/phonebook/operations';\nimport { getContacts } from 'components/redux/phonebook/selectors';\nimport css from './ContactForm.module.css';\n\nfunction ContactForm() {\n  // const contacts = useSelector(state => state.contacts)\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already present in the phonebook`);\n      return;\n    } else if (!name || !number) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    dispatch(addContact({ name: name, number: number }));\n    form.reset();\n  };\n\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   const form = event.target;\n  //   dispatch(addTask(event.target.elements.text.value));\n  //   form.reset();\n\n  //   // if (contacts.some(contact => contact.name === nameInput)) {\n  //   //   alert(`${nameInput} is already present in the phonebook`);\n  //   //   return;\n  //   // } else if (!nameInput || !numberInput) {\n  //   //   alert('Please fill in all fields');\n  //   //   return;\n  //   // }\n  // };\n\n  return (\n    <div className={css.contactContainer}>\n      <form className={css.contactForm} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"number\">Number</label>\n        <input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"filter\":\"ContactList_filter__26Vdf\",\"item\":\"ContactList_item__EZYHO\",\"listButton\":\"ContactList_listButton__UqBsU\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'components/redux/phonebook/operations';\nimport { setFilters } from 'components/redux/phonebook/filtersSlice';\nimport { getContacts, getFilter } from 'components/redux/phonebook/selectors';\nimport css from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filters.toLowerCase())\n  );\n  const handleFilterUpdate = e => {\n    e.preventDefault();\n    dispatch(setFilters(e.target.value));\n  };\n  return (\n    <div className={css.contactList}>\n      <div className={css.filter}>\n        <label htmlFor=\"filter-input\">Find contacts by name</label>\n        <input\n          id=\"filter-input\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Filter\"\n          onChange={handleFilterUpdate}\n        />\n      </div>\n      <ul>\n        {filteredContacts.map(contact => {\n          return (\n            <li key={contact.id} className={css.item}>\n              {/* <img src=\"../../Img/placeholder.jpg\" alt=\"contact img\" /> */}\n              {contact.name} {contact.number}\n              <button\n                className={css.listButton}\n                type=\"button\"\n                name={contact.name}\n                onClick={() => {\n                  handleDelete(contact.id);\n                }}\n              >\n                X\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContainer\":\"Phonebook_phonebookContainer__vJa5P\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'components/redux/phonebook/selectors';\nimport { fetchContacts } from 'components/redux/phonebook/operations';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport css from './Phonebook.module.css';\n\nfunction Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.phonebookContainer}>\n      <ContactForm />\n\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default Phonebook;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filters","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","form","target","name","elements","value","number","some","contact","alert","addContact","reset","htmlFor","id","type","pattern","title","required","filteredContacts","filter","toLowerCase","includes","onChange","e","setFilters","map","onClick","deleteContact","useEffect","fetchContacts"],"sourceRoot":""}